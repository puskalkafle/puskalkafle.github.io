{"ast":null,"code":"var _jsxFileName = \"/Users/puskal/Documents/Web_Development/puskalkafle.github.io/source/components/common/Button.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Icon from './Icon';\n\nconst Button = props => {\n  const {\n    buttonType,\n    size,\n    className,\n    icon,\n    textColor,\n    iconColor,\n    look,\n    styled\n  } = props;\n  return __jsx(StyledButton, {\n    size: size,\n    look: look,\n    buttonType: buttonType,\n    className: className,\n    textColor: textColor,\n    styled: styled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, icon && __jsx(Icon, {\n    icon: icon,\n    color: iconColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }\n  }), __jsx(React.Fragment, null, props.children)));\n};\n\nconst StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"yibscy-0\"\n})([\"display:inline-block;color:\", \";transition:all 0.35s ease-in-out;font-family:\", \";cursor:pointer;border:1px solid transparent;font-weight:600;padding:\", \" \", \";font-size:\", \";&:focus{outline:none;}\", \" \", \" \", \" \", \"\"], props => props.textColor ? props.textColor : ({\n  theme\n}) => theme.colors.white, ({\n  theme\n}) => theme.font.heading, ({\n  theme\n}) => theme.spacing.s, ({\n  theme\n}) => theme.spacing.m, ({\n  theme\n}) => theme.fontSize.m, props => props.buttonType === 'block' && css([\"display:block;width:100%;\"]), props => props.size === 'large' && css([\"padding:\", \";font-size:\", \";line-height:1.5;\"], ({\n  theme\n}) => theme.spacing.m, ({\n  theme\n}) => theme.fontSize.m) || props.size === 'small' && css([\"padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;\"]), props => props.styled === 'OutlinePrimary' && css([\"background:transparent;border:1px solid \", \"};color:\", \"};&:hover,&:active{color:\", \"};}\"], ({\n  theme\n}) => theme.colors.primary.default, ({\n  theme\n}) => theme.colors.primary.default, ({\n  theme\n}) => theme.colors.primary.dark) || props.styled === 'OutlineDark' && css([\"background:transparent;border:1px solid \", \"};color:\", \"};&:hover,&:active{color:\", \"};}\"], ({\n  theme\n}) => theme.colors.text, ({\n  theme\n}) => theme.colors.text, ({\n  theme\n}) => theme.colors.text), props => (props === null || props === void 0 ? void 0 : props.look) === 'primary' && css([\"background-color:\", \"};&:hover,&:active{background-color:\", \"};}\"], ({\n  theme\n}) => theme.colors.primary.default, ({\n  theme\n}) => theme.colors.primary.dark) || (props === null || props === void 0 ? void 0 : props.look) === 'secondary' && css([\"background-color:\", \"};&:hover{background-color:\", \"};}&:active{background-color:\", \"};}\"], ({\n  theme\n}) => theme.colors.text, ({\n  theme\n}) => theme.colors.text, ({\n  theme\n}) => theme.colors.text) || (props === null || props === void 0 ? void 0 : props.look) === 'success' && css([\"background-color:\", \"};&:hover,&:active{background-color:\", \"};}\"], ({\n  theme\n}) => theme.colors.green.default, ({\n  theme\n}) => theme.colors.green.border) || (props === null || props === void 0 ? void 0 : props.look) === 'error' && css([\"background-color:\", \"};&:hover,&:active{background-color:\", \"};}\"], ({\n  theme\n}) => theme.colors.error, ({\n  theme\n}) => theme.colors.error));\nexport default Button;","map":{"version":3,"sources":["/Users/puskal/Documents/Web_Development/puskalkafle.github.io/source/components/common/Button.tsx"],"names":["React","styled","css","Icon","Button","props","buttonType","size","className","icon","textColor","iconColor","look","children","StyledButton","button","theme","colors","white","font","heading","spacing","s","m","fontSize","primary","default","dark","text","green","border","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Icon from './Icon';\n\ninterface Props {\n  buttonType?: string;\n  className?: string | any;\n  icon?: React.Component;\n  textColor?: string;\n  iconColor?: string;\n  look?: string;\n  size?: string;\n  styled?: string;\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const {\n    buttonType,\n    size,\n    className,\n    icon,\n    textColor,\n    iconColor,\n    look,\n    styled,\n  } = props;\n  return (\n    <StyledButton\n      size={size}\n      look={look}\n      buttonType={buttonType}\n      className={className}\n      textColor={textColor}\n      styled={styled}>\n      <>\n        {icon && <Icon icon={icon} color={iconColor} />}\n        <>{props.children}</>\n      </>\n    </StyledButton>\n  );\n};\n\ninterface StyledProps {\n  buttonType?: string;\n  textColor?: string;\n  look?: string;\n  size?: string;\n  styled?: string;\n}\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  color: ${(props: StyledProps) =>\n    props.textColor ? props.textColor : ({ theme }) => theme.colors.white};\n  transition: all 0.35s ease-in-out;\n  font-family: ${({ theme }) => theme.font.heading};\n  cursor: pointer;\n  border: 1px solid transparent;\n  font-weight: 600;\n  padding: ${({ theme }) => theme.spacing.s} ${({ theme }) => theme.spacing.m};\n  font-size: ${({ theme }) => theme.fontSize.m};\n  &:focus {\n    outline: none;\n  }\n\n  ${(props: StyledProps) =>\n    props.buttonType === 'block' &&\n    css`\n      display: block;\n      width: 100%;\n    `}\n\n  ${(props: StyledProps) =>\n    (props.size === 'large' &&\n      css`\n        padding: ${({ theme }) => theme.spacing.m};\n        font-size: ${({ theme }) => theme.fontSize.m};\n        line-height: 1.5;\n      `) ||\n    (props.size === 'small' &&\n      css`\n        padding: 0.25rem 0.5rem;\n        font-size: 0.875rem;\n        line-height: 1.5;\n      `)}\n  \n  ${(props: StyledProps) =>\n    (props.styled === 'OutlinePrimary' &&\n      css`\n    background: transparent;\n    border: 1px solid ${({ theme }) => theme.colors.primary.default}};\n    color:${({ theme }) => theme.colors.primary.default}};\n    &:hover,\n    &:active {\n      color: ${({ theme }) => theme.colors.primary.dark}};\n    }\n    `) ||\n    (props.styled === 'OutlineDark' &&\n      css`\n    background: transparent;\n    border: 1px solid ${({ theme }) => theme.colors.text}};\n    color:${({ theme }) => theme.colors.text}};\n    &:hover,\n    &:active {\n      color: ${({ theme }) => theme.colors.text}};\n    }\n  `)}\n  \n\n  ${(props: StyledProps) =>\n    (props?.look === 'primary' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.primary.default}};\n\n    &:hover,\n    &:active {\n      background-color: ${({ theme }) => theme.colors.primary.dark}};\n    }\n    \n  `) ||\n    (props?.look === 'secondary' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.text}};\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.text}};\n    }\n\n    &:active {\n      background-color: ${({ theme }) => theme.colors.text}};\n    }\n    `) ||\n    (props?.look === 'success' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.green.default}};\n\n    &:hover,\n    &:active {\n      background-color: ${({ theme }) => theme.colors.green.border}};\n    }\n    `) ||\n    (props?.look === 'error' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.error}};\n\n    &:hover,\n    &:active {\n      background-color: ${({ theme }) => theme.colors.error}};\n    }\n  `)}\n`;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}