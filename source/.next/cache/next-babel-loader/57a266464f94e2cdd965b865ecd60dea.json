{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/puskal/Documents/Web_Development/puskalkafle.github.io/source/components/common/Button.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Icon from './Icon';\n\nvar Button = function Button(props) {\n  var buttonType = props.buttonType,\n      size = props.size,\n      className = props.className,\n      icon = props.icon,\n      textColor = props.textColor,\n      iconColor = props.iconColor,\n      look = props.look,\n      styled = props.styled;\n  return __jsx(StyledButton, {\n    size: size,\n    look: look,\n    buttonType: buttonType,\n    className: className,\n    textColor: textColor,\n    styled: styled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, icon && __jsx(Icon, {\n    icon: icon,\n    color: iconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }\n  }), __jsx(React.Fragment, null, props.children)));\n};\n\n_c = Button;\nvar StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"yibscy-0\"\n})([\"display:inline-block;color:\", \";transition:all 0.35s ease-in-out;font-family:\", \";cursor:pointer;border:1px solid transparent;font-weight:600;padding:\", \" \", \";font-size:\", \";&:focus{outline:none;}\", \" \", \" \", \" \", \"\"], function (props) {\n  return props.textColor ? props.textColor : function (_ref) {\n    var theme = _ref.theme;\n    return theme.colors.white;\n  };\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.font.heading;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.spacing.s;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.spacing.m;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.fontSize.m;\n}, function (props) {\n  return props.buttonType === 'block' && css([\"display:block;width:100%;\"]);\n}, function (props) {\n  return props.size === 'large' && css([\"padding:\", \";font-size:\", \";line-height:1.5;\"], function (_ref6) {\n    var theme = _ref6.theme;\n    return theme.spacing.m;\n  }, function (_ref7) {\n    var theme = _ref7.theme;\n    return theme.fontSize.m;\n  }) || props.size === 'small' && css([\"padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;\"]);\n}, function (props) {\n  return props.styled === 'OutlinePrimary' && css([\"background:transparent;border:1px solid \", \"};color:\", \"};&:hover,&:active{color:\", \"};}\"], function (_ref8) {\n    var theme = _ref8.theme;\n    return theme.colors.primary[\"default\"];\n  }, function (_ref9) {\n    var theme = _ref9.theme;\n    return theme.colors.primary[\"default\"];\n  }, function (_ref10) {\n    var theme = _ref10.theme;\n    return theme.colors.primary.dark;\n  }) || props.styled === 'OutlineDark' && css([\"background:transparent;border:1px solid \", \"};color:\", \"};&:hover,&:active{color:\", \"};}\"], function (_ref11) {\n    var theme = _ref11.theme;\n    return theme.colors.text;\n  }, function (_ref12) {\n    var theme = _ref12.theme;\n    return theme.colors.text;\n  }, function (_ref13) {\n    var theme = _ref13.theme;\n    return theme.colors.text;\n  });\n}, function (props) {\n  return (props === null || props === void 0 ? void 0 : props.look) === 'primary' && css([\"background-color:\", \"};&:hover,&:active{background-color:\", \"};}\"], function (_ref14) {\n    var theme = _ref14.theme;\n    return theme.colors.primary[\"default\"];\n  }, function (_ref15) {\n    var theme = _ref15.theme;\n    return theme.colors.primary.dark;\n  }) || (props === null || props === void 0 ? void 0 : props.look) === 'secondary' && css([\"background-color:\", \"};&:hover{background-color:\", \"};}&:active{background-color:\", \"};}\"], function (_ref16) {\n    var theme = _ref16.theme;\n    return theme.colors.text;\n  }, function (_ref17) {\n    var theme = _ref17.theme;\n    return theme.colors.text;\n  }, function (_ref18) {\n    var theme = _ref18.theme;\n    return theme.colors.text;\n  }) || (props === null || props === void 0 ? void 0 : props.look) === 'success' && css([\"background-color:\", \"};&:hover,&:active{background-color:\", \"};}\"], function (_ref19) {\n    var theme = _ref19.theme;\n    return theme.colors.green[\"default\"];\n  }, function (_ref20) {\n    var theme = _ref20.theme;\n    return theme.colors.green.border;\n  }) || (props === null || props === void 0 ? void 0 : props.look) === 'error' && css([\"background-color:\", \"};&:hover,&:active{background-color:\", \"};}\"], function (_ref21) {\n    var theme = _ref21.theme;\n    return theme.colors.error;\n  }, function (_ref22) {\n    var theme = _ref22.theme;\n    return theme.colors.error;\n  });\n});\n_c2 = StyledButton;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StyledButton\");","map":{"version":3,"sources":["/Users/puskal/Documents/Web_Development/puskalkafle.github.io/source/components/common/Button.tsx"],"names":["React","styled","css","Icon","Button","props","buttonType","size","className","icon","textColor","iconColor","look","children","StyledButton","button","theme","colors","white","font","heading","spacing","s","m","fontSize","primary","dark","text","green","border","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Icon from './Icon';\n\ninterface Props {\n  buttonType?: string;\n  className?: string | any;\n  icon?: React.Component;\n  textColor?: string;\n  iconColor?: string;\n  look?: string;\n  size?: string;\n  styled?: string;\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const {\n    buttonType,\n    size,\n    className,\n    icon,\n    textColor,\n    iconColor,\n    look,\n    styled,\n  } = props;\n  return (\n    <StyledButton\n      size={size}\n      look={look}\n      buttonType={buttonType}\n      className={className}\n      textColor={textColor}\n      styled={styled}>\n      <>\n        {icon && <Icon icon={icon} color={iconColor} />}\n        <>{props.children}</>\n      </>\n    </StyledButton>\n  );\n};\n\ninterface StyledProps {\n  buttonType?: string;\n  textColor?: string;\n  look?: string;\n  size?: string;\n  styled?: string;\n}\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  color: ${(props: StyledProps) =>\n    props.textColor ? props.textColor : ({ theme }) => theme.colors.white};\n  transition: all 0.35s ease-in-out;\n  font-family: ${({ theme }) => theme.font.heading};\n  cursor: pointer;\n  border: 1px solid transparent;\n  font-weight: 600;\n  padding: ${({ theme }) => theme.spacing.s} ${({ theme }) => theme.spacing.m};\n  font-size: ${({ theme }) => theme.fontSize.m};\n  &:focus {\n    outline: none;\n  }\n\n  ${(props: StyledProps) =>\n    props.buttonType === 'block' &&\n    css`\n      display: block;\n      width: 100%;\n    `}\n\n  ${(props: StyledProps) =>\n    (props.size === 'large' &&\n      css`\n        padding: ${({ theme }) => theme.spacing.m};\n        font-size: ${({ theme }) => theme.fontSize.m};\n        line-height: 1.5;\n      `) ||\n    (props.size === 'small' &&\n      css`\n        padding: 0.25rem 0.5rem;\n        font-size: 0.875rem;\n        line-height: 1.5;\n      `)}\n  \n  ${(props: StyledProps) =>\n    (props.styled === 'OutlinePrimary' &&\n      css`\n    background: transparent;\n    border: 1px solid ${({ theme }) => theme.colors.primary.default}};\n    color:${({ theme }) => theme.colors.primary.default}};\n    &:hover,\n    &:active {\n      color: ${({ theme }) => theme.colors.primary.dark}};\n    }\n    `) ||\n    (props.styled === 'OutlineDark' &&\n      css`\n    background: transparent;\n    border: 1px solid ${({ theme }) => theme.colors.text}};\n    color:${({ theme }) => theme.colors.text}};\n    &:hover,\n    &:active {\n      color: ${({ theme }) => theme.colors.text}};\n    }\n  `)}\n  \n\n  ${(props: StyledProps) =>\n    (props?.look === 'primary' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.primary.default}};\n\n    &:hover,\n    &:active {\n      background-color: ${({ theme }) => theme.colors.primary.dark}};\n    }\n    \n  `) ||\n    (props?.look === 'secondary' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.text}};\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.text}};\n    }\n\n    &:active {\n      background-color: ${({ theme }) => theme.colors.text}};\n    }\n    `) ||\n    (props?.look === 'success' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.green.default}};\n\n    &:hover,\n    &:active {\n      background-color: ${({ theme }) => theme.colors.green.border}};\n    }\n    `) ||\n    (props?.look === 'error' &&\n      css`\n    background-color: ${({ theme }) => theme.colors.error}};\n\n    &:hover,\n    &:active {\n      background-color: ${({ theme }) => theme.colors.error}};\n    }\n  `)}\n`;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}