{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport urls from '../constants/urls';\n\nconst makeRequest = async (url, method, data, headers) => {\n  const response = await axios({\n    url,\n    method,\n    data,\n    headers\n  });\n  return response;\n};\n\naxios.interceptors.request.use(async function (config) {\n  config.headers = _objectSpread(_objectSpread({}, config.headers), {}, {\n    Authorization: 'Basic ' + Buffer.from('flamingo:A2DczBtteEszJPmw').toString('base64')\n  });\n  return config;\n});\nexport const fetchApartments = async () => {\n  return makeRequest(urls.apartments, 'GET').then(response => response.data);\n};\nexport const fetchServices = async () => {\n  return makeRequest(urls.services, 'GET').then(response => response.data);\n};\nexport const getHotelDetails = async (_, hotelId) => {\n  const reqUrl = urls.hotelDetails.replace(':hotelId', hotelId.toString());\n  return makeRequest(reqUrl, 'GET').then(response => response.data);\n};\nexport const getSimilarHotels = async (_, hotelId) => {\n  const reqUrl = urls.similarHotels.replace(':hotelId', hotelId.toString());\n  return makeRequest(reqUrl, 'GET').then(response => response.data);\n};\nexport const fetchFeaturedHotels = async () => {\n  return makeRequest(urls.featuredHotels, 'GET').then(response => response.data);\n};\nexport const getAutoSuggestions = async name => {\n  const reqUrl = urls.autoSuggestHotels.replace('searchParams', name);\n  return makeRequest(reqUrl, 'GET').then(response => response.data);\n};\nexport const searchLists = async params => {\n  const res = await axios.get(urls.searchLists, {\n    params\n  });\n  return res.data;\n};\nexport const agencyLogin = async logindata => {\n  return makeRequest(urls.agencyLogin, \"POST\", logindata).then(response => response.data);\n};\nexport const getRooms = async (_, hotelId) => {\n  const reqUrl = urls.getRooms.replace(':hotelId', hotelId.toString());\n  return makeRequest(reqUrl, 'GET').then(response => response.data);\n};\nexport const fetchListingParameters = async () => {\n  return makeRequest(urls.listingParameters, 'GET').then(response => response.data);\n};","map":{"version":3,"sources":["/Users/puskal/Documents/Web_Development/puskalkafle.github.io/source/utils/api.ts"],"names":["axios","urls","makeRequest","url","method","data","headers","response","interceptors","request","use","config","Authorization","Buffer","from","toString","fetchApartments","apartments","then","fetchServices","services","getHotelDetails","_","hotelId","reqUrl","hotelDetails","replace","getSimilarHotels","similarHotels","fetchFeaturedHotels","featuredHotels","getAutoSuggestions","name","autoSuggestHotels","searchLists","params","res","get","agencyLogin","logindata","getRooms","fetchListingParameters","listingParameters"],"mappings":"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","sourcesContent":["import axios, { Method } from 'axios';\nimport urls from '../constants/urls';\n\nconst makeRequest = async (\n  url: string,\n  method: Method,\n  data?: any,\n  headers?: any\n) => {\n  const response = await axios({\n    url,\n    method,\n    data,\n    headers,\n  });\n  return response;\n};\n\naxios.interceptors.request.use(async function (config) {\n  config.headers = {\n    ...config.headers,\n    Authorization:\n      'Basic ' + Buffer.from('flamingo:A2DczBtteEszJPmw').toString('base64'),\n  };\n\n  return config;\n});\n\nexport const fetchApartments = async () => {\n  return makeRequest(urls.apartments, 'GET').then((response) => response.data);\n};\n\nexport const fetchServices = async () => {\n  return makeRequest(urls.services, 'GET').then((response) => response.data);\n};\n\nexport const getHotelDetails = async (_, hotelId: number) => {\n  const reqUrl = urls.hotelDetails.replace(':hotelId', hotelId.toString());\n  return makeRequest(reqUrl, 'GET').then((response) => response.data);\n};\n\nexport const getSimilarHotels = async (_, hotelId: number) => {\n  const reqUrl = urls.similarHotels.replace(':hotelId', hotelId.toString());\n  return makeRequest(reqUrl, 'GET').then((response) => response.data);\n};\n\nexport const fetchFeaturedHotels = async () => {\n  return makeRequest(urls.featuredHotels, 'GET').then(\n    (response) => response.data\n  );\n};\n\nexport const getAutoSuggestions = async (name: string) => {\n  const reqUrl = urls.autoSuggestHotels.replace('searchParams', name);\n\n  return makeRequest(reqUrl, 'GET').then((response) => response.data);\n};\n\nexport const searchLists = async (params:any) => {\n  const res = await axios.get(urls.searchLists, { params });\n  return res.data;\n}\n\nexport const agencyLogin = async (logindata: any) => {\n  return makeRequest(urls.agencyLogin, \"POST\", logindata).then((response) => response.data);\n};\n\nexport const getRooms = async (_, hotelId: number) => {\n  const reqUrl = urls.getRooms.replace(':hotelId', hotelId.toString());\n  return makeRequest(reqUrl, 'GET').then((response) => response.data);\n};\n\nexport const fetchListingParameters = async () => {\n  return makeRequest(urls.listingParameters, 'GET').then(\n    (response) => response.data\n  );\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}